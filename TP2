Exo 1:
int main()
{
    int age;
    string categorie;
    
    cin >> age;
    if (age < 6) {
    categorie = "";
    }
    else if (age <= 7) {
    categorie = "Poussin";
    }
    else if (age <= 9) {
    categorie = "Pupille";
    }
    else if (age <= 11) {
    categorie = "Minime";
    }
    else if (age <= 13) {
    categorie = "Cadet";
    }
    else if (age <= 17) {
    categorie = "Junior";
    }
    else {
    categorie = "Senior";
    };
    cout << categorie;
    return 0;
}

Exo 2 :

int main()
{
    string count;
    for (int i=1; i <= 20; i++) {
    cout << i;
    if (i != 20) {
        cout << ", ";
    }
}
    return 0;
}

Exo  3 :

int main()
{
    int somme=0, count=0;
    while (count <= 10) {
    
        somme += count;
        cout << "Somme intermédiaire numéro " << count << " est " << somme << endl;
        count += 1;
    }
    
    return 0;
}

Exo 4 :

int main()
{
    int val;
    /*do {
        cin >> val;
        if (val!=0) {
            if (val%2 == 0) {
                cout << "pair";
            } else {
                cout << "impair";
        }
        }
        } while (val != 0); */
    
    while (val != 0) {
    cin >> val;
        if (val!=0) {
        if (val%2 == 0) {
        cout << "pair";
        } else {
        cout << "impair";
        }
        }
    }
    
    return 0;
}

Exo 5 :

int main()
{
    
    float n, bmax, bmin, t;
    cout << "Choisissez un nombre et deux bornes qui le comprennent." << endl;
    cin >> n >> bmin >> bmax;
    if (bmax < bmin) {
    bmin = t;
    bmin = bmax;
    bmax = t;
    }
    while (n<bmin or n>bmax) {
    cout << "Error: n out of range" << endl;
    cout << "Choisissez un nombre appartenant l'intervalle." << endl;
    cin >> n;
    }
    
    return 0;
}

Exo 6 :

int main()
{
    int number;
    cin >> number;
    while (number % 3 == 0) {
         number = number / 3;
           }
    if (number == 1) {
    cout << "Le nombre est une puissance de 3.";
    } else {
    cout << "Le nombre n'est pas une puissance de 3.";
    }
    return 0;
}

Exo 7 :

int main()
{
 int n, m;
    cout << "Saisir le nombre dont vous voulez afficher la table de multiplication : ";
    cin >> n;
    cout << "Combien de multiples voulez-vous afficher ?";
    cin >> m;
    cout << "La table de multiplication du chiffre " << n << " que vous souhaitez est : ";
    for (int i=1; i<=m; i++) {
    cout << n << " * " << i << " = " << n*i << endl;
    }
    return 0;
}

Exo 8 :

int main()
{
    int l, h;
    cout << "Entrer la largeur du rectangle : Veuillez un entier entre 0 et 256 : ";
    cin >> l;
    cout << "Entrer la hauteur du rectangle : Veuillez un entier entre 0 et 256 : ";
    cin >> h;
    for (int j = 0; j < h; j++) {
    for (int i = 0; i < l; i++) {
        if (j==0) {
        std::cout << "*";
        }
        else if (i==0 or i==l-1) {
            std::cout << "*";
        } else {
        cout <<" ";
        }
    }
    std::cout << "" << std::endl;
  }
  for (int j = 0; j < h; j++) {
    for (int i = 0; i < l; i++) {

      std::cout << "*";
    }
    std::cout << "" << std::endl;
    return 0;
}}

Exo 9 :

int main()
{
    int n;
    char t='o';
    
    while (t=='o' or t=='O') {
    string e = "*";
    cout << "Veuillez saisir un entier entre 1 et 100 : ";
    cin >> n;
    for (int j=0; j<n; j++) {
        cout << e << endl;
        e += "*";
    } 
    cout << "Voulez-vous continuer ? ('o' ou 'O' pour continuer, 'n' ou 'N' pour arrêter.)";
    cin >> t;
    while ( t!='o' and  t!='O' and t!='n' and t!='N') {
    cout << "Erreur : veuillez saisir ou 'o'/'O' ou 'n'/'N'";
    cin >> t;
    }
    }
    return 0;
}

Exo 10 :

int main()
{
long int u, m1, m2, r, n;
  m1 = 1;
  m2 = 1;
  u = 0;
  cout << "Quel est le rang max du terme de la suite de Fibonacci à calculer >= 2 et <= 50 : " << endl << "Veuillez saisir u nentier entre 2 et 50 : ";
  std::cin >> n;
  std::cout << "U0 : " << m1 << std::endl << "U1 : " << m2 << std::endl;
  for (int i = 0; i < n - 1; i++) {

    u = m1 + m2;
    r = m1;
    m1 = u;
    m2 = r;
    std::cout << "U" << i+2 << " : " << u << std::endl;
    
} return 0;
}


Après j'ai pas fait
